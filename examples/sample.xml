<!-- include type and name definitions for other languages -->
<config file="examples/rust.xml" />

<var type="void*" name="void_ptr" qualifier="extern" />

<!-- generate an enum -->
<enum name="FooEnum">
    <var name="EnumVal1" />
    <var name="EnumVal2" />
    <var name="EnumVal3" />
    <var name="Count" value="3" />
</enum>

<!-- generate struct Foo, 2 ints, 1 function, 1 function ptr -->
<struct name="Foo">
    <var type="int" name="x" />
    <var type="int" name="y" />
    
    <func type="char" name="return_arg"> <!-- char return_arg(char arg); -->
        <var type="char" name="arg" />
    </func>
    <func type="void (*sample_ptr)"> <!-- function pointer void (*sample_ptr(const char* fmt, ...); -->
        <var type="const char*" name="fmt" />
        <var type="..." />
    </func>
    <struct name="Bar">
        <enum name="BarEnum">
            <var name="EnumVal4" />
            <var name="EnumVal5" />
        </enum>
        <func qualifier="extern" type="int" name="foo" >
            <var type="int" name="x" value="1" />
        </func>
    </struct>
</struct>